{"version":3,"sources":["components/Header.js","components/CreateNote.js","components/NoteItem.js","components/NotesList.js","components/Notes.js","components/Layout.js","App.js","serviceWorker.js","index.js"],"names":["Header","Fragment","className","id","Component","CreateNote","updateText","e","setState","note","text","target","value","dateTo","state","dateFrom","title","props","keyProp","color","updateTitle","updateDateTo","updateDateFrom","updateColor","submitForm","preventDefault","document","getElementById","append","onSubmit","rows","placeholder","onChange","type","data-toggle","data-target","aria-expanded","aria-controls","tabIndex","htmlFor","name","NoteItem","toggle","update","removeItem","stopPropagation","this","complete","style","backgroundColor","onClick","source","NotesList","updateNote","notes","map","_note","_index","tag","key","Notes","componentDidMount","localStorage","getItem","count","doNotes","JSON","parse","doCount","appendNote","a","setItem","stringify","parseInt","newNotes","updateIndexing","reverse","filter","x","clearList","clear","Layout","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"4MAeeA,G,4KAVX,OACE,kBAAC,IAAMC,SAAP,KACE,yBAAKC,UAAU,eACb,wBAAIC,GAAG,UAAP,gBAA6B,oE,GALlBC,c,gCCyFNC,E,kDAzFb,aAAe,IAAD,8BACZ,gBAaFC,WAAa,SAACC,GACZ,EAAKC,SAAS,CAAEC,KAAM,CAAEC,KAAMH,EAAEI,OAAOC,MAAOC,OAAQ,EAAKC,MAAML,KAAKI,OAAQE,SAAU,EAAKD,MAAML,KAAKM,SAAUC,MAAO,EAAKF,MAAML,KAAKO,MAAOb,GAAI,EAAKc,MAAMC,QAASC,MAAO,EAAKL,MAAML,KAAKU,UAfnL,EAkBdC,YAAc,SAACb,GACb,EAAKC,SAAS,CAAEC,KAAM,CAAEC,KAAM,EAAKI,MAAML,KAAKC,KAAMG,OAAQ,EAAKC,MAAML,KAAKI,OAAQE,SAAU,EAAKD,MAAML,KAAKM,SAAUC,MAAOT,EAAEI,OAAOC,MAAOT,GAAI,EAAKc,MAAMC,QAASC,MAAO,EAAKL,MAAML,KAAKU,UAnBlL,EAsBdE,aAAe,SAACd,GACd,EAAKC,SAAS,CAAEC,KAAM,CAAEC,KAAM,EAAKI,MAAML,KAAKC,KAAMG,OAAQN,EAAEI,OAAOC,MAAOG,SAAU,EAAKD,MAAML,KAAKM,SAAUC,MAAO,EAAKF,MAAML,KAAKO,MAAOb,GAAI,EAAKc,MAAMC,QAASC,MAAO,EAAKL,MAAML,KAAKU,UAvBjL,EA0BdG,eAAiB,SAACf,GAChB,EAAKC,SAAS,CAAEC,KAAM,CAAEC,KAAM,EAAKI,MAAML,KAAKC,KAAMG,OAAQ,EAAKC,MAAML,KAAKI,OAAQE,SAAUR,EAAEI,OAAOC,MAAOI,MAAO,EAAKF,MAAML,KAAKO,MAAOb,GAAI,EAAKc,MAAMC,QAASC,MAAO,EAAKL,MAAML,KAAKU,UA3B/K,EA8BdI,YAAc,SAAChB,GACb,EAAKC,SAAS,CAAEC,KAAM,CAAEC,KAAM,EAAKI,MAAML,KAAKC,KAAMG,OAAQ,EAAKC,MAAML,KAAKI,OAAQE,SAAU,EAAKD,MAAML,KAAKM,SAAUC,MAAO,EAAKF,MAAML,KAAKO,MAAOb,GAAI,EAAKc,MAAMC,QAASC,MAAOZ,EAAEI,OAAOC,UA/BlL,EAkCdY,WAAa,SAACjB,GACZA,EAAEkB,iBAC8C,KAA5CC,SAASC,eAAe,UAAUf,QACpC,EAAKJ,SAAS,CAAEC,KAAM,CAAEC,KAAM,EAAKI,MAAML,KAAKC,KAAMG,OAAQ,EAAKC,MAAML,KAAKI,OAAQE,SAAU,EAAKD,MAAML,KAAKM,SAAUC,MAAO,EAAKF,MAAML,KAAKO,MAAOb,GAAI,EAAKc,MAAMC,QAASC,MAAO,EAAKL,MAAML,KAAKU,SACrM,EAAKF,MAAMW,OAAO,EAAKd,MAAML,MAC7BiB,SAASC,eAAe,UAAUf,MAAQ,GAC1Cc,SAASC,eAAe,SAASf,MAAQ,GACzCc,SAASC,eAAe,UAAUf,MAAQ,GAC1Cc,SAASC,eAAe,YAAYf,MAAQ,GAC5Cc,SAASC,eAAe,UAAUf,MAAQ,UAC1C,EAAKJ,SAAS,CACZC,KAAM,CACJC,KAAM,GACNM,MAAO,GACPH,OAAQ,GACRE,SAAU,GACVZ,GAAI,GACJgB,MAAO,eAjDb,EAAKL,MAAQ,CACXL,KAAM,CACJC,KAAM,GACNM,MAAO,GACPH,OAAQ,GACRE,SAAU,GACVI,MAAO,YARC,E,qDAyDJ,IAAD,OACP,OACE,6BACE,0BAAMU,SAAU,SAACtB,GAAD,OAAO,EAAKiB,WAAWjB,KACrC,8BAAUuB,KAAK,IAAI3B,GAAG,SAAS4B,YAAY,OAAOC,SAAU,SAACzB,GAAD,OAAO,EAAKD,WAAWC,IAAI0B,KAAK,SAC5F,4BAAQA,KAAK,SAAS9B,GAAG,gBAAgB+B,cAAY,WAAWC,cAAY,mBAAmBC,gBAAc,QAAQC,gBAAc,kBAAkBC,SAAS,MAC5J,uBAAGpC,UAAU,YAAYoC,SAAS,QAEpC,4BAAQL,KAAK,SAAS9B,GAAG,eAAemC,SAAS,MAAjD,UACA,yBAAKpC,UAAU,WAAWC,GAAG,mBAC3B,2BAAOA,GAAG,QAAQ4B,YAAY,QAAQE,KAAK,OAAOD,SAAU,SAACzB,GAAD,OAAO,EAAKa,YAAYb,MACpF,yBAAKL,UAAU,UACb,2BAAOqC,QAAQ,UAAf,UACA,4BAAQC,KAAK,SAASrC,GAAG,SAAS6B,SAAU,SAACzB,GAAD,OAAO,EAAKgB,YAAYhB,KAClE,4BAAQK,MAAM,WAAd,WACA,4BAAQA,MAAM,OAAd,OACA,4BAAQA,MAAM,UAAd,UACA,4BAAQA,MAAM,UAAd,UACA,4BAAQA,MAAM,QAAd,UAGJ,2BAAOT,GAAG,WAAW4B,YAAY,aAAaE,KAAK,OAAOD,SAAU,SAACzB,GAAD,OAAO,EAAKe,eAAef,MAC/F,2BAAOJ,GAAG,SAAS4B,YAAY,WAAWE,KAAK,OAAOD,SAAU,SAACzB,GAAD,OAAO,EAAKc,aAAad,MACzF,oC,GAjFaH,a,iBCkCVqC,E,4MA9BbC,OAAS,SAACnC,GACY,iBAAhBA,EAAEI,OAAOR,GACX,EAAKc,MAAM0B,OAAO,EAAK1B,MAAMR,MAE7B,EAAKmC,WAAW,EAAK3B,MAAMR,O,EAI/BmC,WAAa,SAACrC,GACZA,EAAEsC,kBACF,EAAK5B,MAAM2B,WAAW,EAAK3B,MAAMR,O,uDAGzB,IACAA,EAASqC,KAAK7B,MAAdR,KACR,OACE,yBAAKP,UAAU,OACb,yBAAKA,UAAU,UACb,yBAAKA,UAAW,QAAUO,EAAKsC,SAAW,aAAe,IAAKC,MAAO,CAACC,gBAAiC,YAAfxC,EAAKU,MAAsBV,EAAKU,MAAQ,aAAe+B,QAASJ,KAAKJ,QAC3J,wBAAIxC,UAAU,cAAa,0BAAMA,UAAU,UAAS,4BAAQ+B,KAAK,SAAS9B,GAAG,eAAe+C,QAASJ,KAAKF,YAAtD,MAAmG,KAAfnC,EAAKO,MAAeP,EAAKO,MAAQ,OAAO,0BAAMb,GAAG,SAA2B,KAAlBM,EAAKM,SAAkB,SAAWN,EAAKM,SAAW,KAAO,GAAoB,KAAhBN,EAAKI,OAAgB,OAASJ,EAAKI,OAAS,KAC3S,yBAAKX,UAAW,aAAeO,EAAKsC,SAAW,aAAe,KAC5D,kBAAC,IAAD,CAAeI,OAAQ1C,EAAKC,e,GAtBnBN,aC2BRgD,E,4MATbR,WAAa,SAACnC,GACZ,EAAKQ,MAAM2B,WAAWnC,I,EAGxB4C,WAAa,SAAC5C,GACZ,EAAKQ,MAAM0B,OAAOlC,I,uDArBV,IAAD,OACC6C,EAAUR,KAAK7B,MAAfqC,MACR,OACE,yBAAKpD,UAAU,YAAYC,GAAG,QAE1BmD,EAAMC,KAAI,SAACC,EAAOC,GAChB,OACE,kBAAC,EAAD,CAAUC,IAAI,OAAOC,IAAKF,EAAQhD,KAAM+C,EAAOb,OAAQ,EAAKU,WAAYT,WAAY,EAAKA,qB,GAT/ExC,aCwFTwD,E,kDAtFb,aAAe,IAAD,8BACZ,gBAOFC,kBAAoB,WAClB,IAAMP,EAAQQ,aAAaC,QAAQ,SAC7BC,EAAQF,aAAaC,QAAQ,SACnC,GAAIT,EAAO,CACT,IAAMW,EAAUC,KAAKC,MAAMb,GACrBc,EAAUF,KAAKC,MAAMH,GAC3B,EAAKxD,SAAS,CAAE8C,MAAM,YAAKW,GAAUD,MAAOI,MAdlC,EAmBdC,WAnBc,uCAmBD,WAAO5D,GAAP,SAAA6D,EAAA,sEACL,EAAK9D,SAAS,CAAE8C,MAAM,CAAE,CAAE5C,KAAMD,EAAKC,KAAMM,MAAOP,EAAKO,MAAOH,OAAQJ,EAAKI,OAAQE,SAAUN,EAAKM,SAAUgC,UAAU,EAAO5C,GAAIM,EAAKN,GAAIgB,MAAOV,EAAKU,QAAjI,mBAA6I,EAAKL,MAAMwC,QAAQU,MAAO,EAAKlD,MAAMkD,MAAQ,IAD1M,OAEXF,aAAaS,QAAQ,QAASL,KAAKM,UAAU,EAAK1D,MAAMwC,QACxDQ,aAAaS,QAAQ,QAASE,SAASP,KAAKM,UAAU,EAAK1D,MAAMkD,SAHtD,2CAnBC,wDAyBdX,WAzBc,uCAyBD,WAAO5C,GAAP,eAAA6D,EAAA,6DACLI,EAAW,EAAK5D,MAAMwC,MAAMC,KAAI,SAAAC,GACpC,OAAI/C,IAAS+C,EACJ,CACL9C,KAAMD,EAAKC,KACXM,MAAOP,EAAKO,MACZH,OAAQJ,EAAKI,OACbE,SAAUN,EAAKM,SACfgC,UAAWtC,EAAKsC,SAChB5C,GAAIM,EAAKN,GACTgB,MAAOV,EAAKU,OAGPqC,KAbA,SAgBL,EAAKhD,SAAS,CAAE8C,MAAOoB,IAhBlB,OAiBXZ,aAAaS,QAAQ,QAASL,KAAKM,UAAU,EAAK1D,MAAMwC,QAjB7C,2CAzBC,wDA6CdqB,eA7Cc,uCA6CG,WAAOrB,GAAP,eAAAgB,EAAA,6DACXI,EAAWpB,EAAMsB,UAAUrB,KAAI,SAACC,EAAOC,GAEzC,OADAD,EAAMrD,GAAKsD,EACJD,MAEAoB,UALM,SAMT,EAAKpE,SAAS,CAAE8C,MAAOoB,EAAUV,MAAO,EAAKlD,MAAMkD,MAAQ,IANlD,OAOfF,aAAaS,QAAQ,QAASL,KAAKM,UAAU,EAAK1D,MAAMwC,QACxDQ,aAAaS,QAAQ,QAASL,KAAKM,UAAU,EAAK1D,MAAMkD,QARzC,2CA7CH,wDAwDdpB,WAxDc,uCAwDD,WAAOnC,GAAP,eAAA6D,EAAA,sDACLI,EAAW,EAAK5D,MAAMwC,MAAMuB,QAAO,SAACC,GAAD,OAAOA,EAAE3E,KAAOM,EAAKN,MAC9D,EAAKwE,eAAeD,GAFT,2CAxDC,wDA6DdK,UAAY,WACVjB,aAAakB,QACb,EAAKxE,SAAS,CAAE8C,MAAO,GAAIU,MAAO,KA7DlC,EAAKlD,MAAQ,CACXwC,MAAO,GACPU,MAAO,GAJG,E,qDAmEZ,OACE,yBAAK9D,UAAU,YAAYC,GAAG,YAC5B,yBAAKD,UAAU,OACb,yBAAKA,UAAU,SACb,wCAAa,0BAAMA,UAAU,oBAAmB,6BAAM4C,KAAKhC,MAAMkD,QAAjE,WAEF,yBAAK9D,UAAU,SACb,kBAAC,EAAD,CAAY0B,OAAQkB,KAAKuB,WAAYnD,QAAS4B,KAAKhC,MAAMkD,SAE3D,yBAAK9D,UAAU,SACb,0BAAMA,UAAU,eAAc,4BAAQ+B,KAAK,SAAS9B,GAAG,cAAc+C,QAASJ,KAAKiC,WAArD,iBAGlC,kBAAC,EAAD,CAAWzB,MAAOR,KAAKhC,MAAMwC,MAAOX,OAAQG,KAAKO,WAAYT,WAAYE,KAAKF,kB,GAjFlExC,aCcL6E,E,4MAbbnE,MAAQ,G,uDAEN,OACE,yBAAKZ,UAAU,kBAAkBC,GAAG,WAClC,yBAAKD,UAAU,YACb,kBAAC,EAAD,OAEF,kBAAC,EAAD,W,GARaE,aCMN8E,MARf,WACE,OACE,yBAAKhF,UAAU,OACb,kBAAC,EAAD,QCKciF,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFhE,SAASC,eAAe,SDyHpB,kBAAmBgE,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,a","file":"static/js/main.806d5dcb.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './stylesheets/Layout.css'\n\nclass Header extends Component {\n  render() {\n    return (\n      <React.Fragment>\n        <div className=\"page-header\">\n          <h1 id=\"header\">Productivity <small>A solution to organization</small></h1>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Header;","import React, { Component } from 'react';\n\nclass CreateNote extends Component {\n  constructor() {\n    super();\n    this.state = {\n      note: {\n        text: '',\n        title: '',\n        dateTo: '',\n        dateFrom: '',\n        color: 'default'\n      }\n    }\n  }\n\n\n  updateText = (e) => {\n    this.setState({ note: { text: e.target.value, dateTo: this.state.note.dateTo, dateFrom: this.state.note.dateFrom, title: this.state.note.title, id: this.props.keyProp, color: this.state.note.color } });\n  }\n\n  updateTitle = (e) => {\n    this.setState({ note: { text: this.state.note.text, dateTo: this.state.note.dateTo, dateFrom: this.state.note.dateFrom, title: e.target.value, id: this.props.keyProp, color: this.state.note.color } });\n  }\n\n  updateDateTo = (e) => {\n    this.setState({ note: { text: this.state.note.text, dateTo: e.target.value, dateFrom: this.state.note.dateFrom, title: this.state.note.title, id: this.props.keyProp, color: this.state.note.color } });\n  }\n\n  updateDateFrom = (e) => {\n    this.setState({ note: { text: this.state.note.text, dateTo: this.state.note.dateTo, dateFrom: e.target.value, title: this.state.note.title, id: this.props.keyProp, color: this.state.note.color } });\n  }\n\n  updateColor = (e) => {\n    this.setState({ note: { text: this.state.note.text, dateTo: this.state.note.dateTo, dateFrom: this.state.note.dateFrom, title: this.state.note.title, id: this.props.keyProp, color: e.target.value } });\n  }\n\n  submitForm = (e) => {\n    e.preventDefault();\n    if (document.getElementById('create').value !== '') {\n      this.setState({ note: { text: this.state.note.text, dateTo: this.state.note.dateTo, dateFrom: this.state.note.dateFrom, title: this.state.note.title, id: this.props.keyProp, color: this.state.note.color } });\n      this.props.append(this.state.note);\n      document.getElementById('create').value = '';\n      document.getElementById('title').value = '';\n      document.getElementById('dateTo').value = '';\n      document.getElementById('dateFrom').value = '';\n      document.getElementById('colors').value = 'default';\n      this.setState({\n        note: {\n          text: '',\n          title: '',\n          dateTo: '',\n          dateFrom: '',\n          id: '',\n          color: 'default'\n        }\n      })\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <form onSubmit={(e) => this.submitForm(e)}>\n          <textarea rows='2' id='create' placeholder='Note' onChange={(e) => this.updateText(e)} type='text'></textarea>\n          <button type='button' id='optionsButton' data-toggle='collapse' data-target='#collapseOptions' aria-expanded='false' aria-controls='collapseOptions' tabIndex='-1'>\n            <i className='arrowDown' tabIndex='-1' />\n          </button>\n          <button type='submit' id='createButton' tabIndex='-1'>Create</button>\n          <div className='collapse' id='collapseOptions'>\n            <input id='title' placeholder='Title' type='text' onChange={(e) => this.updateTitle(e)}></input>\n            <div className='colors'>\n              <label htmlFor='colors'>Color:</label>\n              <select name='colors' id='colors' onChange={(e) => this.updateColor(e)}>\n                <option value='default'>Default</option>\n                <option value='red'>Red</option>\n                <option value='orange'>Orange</option>\n                <option value='yellow'>Yellow</option>\n                <option value='blue'>Blue</option>\n              </select>\n            </div>\n            <input id='dateFrom' placeholder='Date: from' type='text' onChange={(e) => this.updateDateFrom(e)}></input>\n            <input id='dateTo' placeholder='Date: to' type='text' onChange={(e) => this.updateDateTo(e)}></input>\n            <br />\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\n\nexport default CreateNote;","import React, { Component } from 'react';\nimport ReactMarkdown from 'react-markdown';\n\nimport './stylesheets/Layout.css';\n\nclass NoteItem extends Component {\n  toggle = (e) => {\n    if (e.target.id !== 'removeButton') {\n      this.props.update(this.props.note);\n    } else {\n      this.removeItem(this.props.note);\n    }\n\n  }\n  removeItem = (e) => {\n    e.stopPropagation();\n    this.props.removeItem(this.props.note);\n  }\n\n  render() {\n    const { note } = this.props;\n    return (\n      <div className='row'>\n        <div className='col ok'>\n          <div className={'card' + (note.complete ? ' completed' : '')} style={{backgroundColor: (note.color !== 'default' ? note.color : 'gainsboro')}} onClick={this.toggle}  >\n            <h4 className='card-title'><span className='remove'><button type='button' id='removeButton' onClick={this.removeItem}>X</button></span>{note.title !== '' ? note.title : 'Note'}<span id='dates'>{note.dateFrom !== '' ? 'From: ' + note.dateFrom + '\\n' : ''}{note.dateTo !== '' ? 'To: ' + note.dateTo : ''}</span></h4>\n            <div className={'card-body' + (note.complete ? ' completed' : '')}>\n              <ReactMarkdown source={note.text} />\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default NoteItem;","import React, { Component } from 'react';\nimport NoteItem from './NoteItem';\n\nimport './stylesheets/Layout.css'\n\nclass NotesList extends Component {\n\n  render() {\n    const { notes } = this.props;\n    return (\n      <div className='container' id='list'>\n        {\n          notes.map((_note, _index) => {\n            return (\n              <NoteItem tag='note' key={_index} note={_note} update={this.updateNote} removeItem={this.removeItem}>\n              </NoteItem>\n            )\n          })\n        }\n      </div>\n    );\n  }\n\n  removeItem = (note) => {\n    this.props.removeItem(note);\n  }\n\n  updateNote = (note) => {\n    this.props.update(note);\n  }\n}\n\nexport default NotesList;","import React, { Component } from 'react';\nimport CreateNote from './CreateNote';\nimport NotesList from './NotesList';\n\nimport './stylesheets/Layout.css'\n\nclass Notes extends Component {\n  constructor() {\n    super();\n    this.state = {\n      notes: [],\n      count: 0,\n    };\n  };\n\n  componentDidMount = () => {\n    const notes = localStorage.getItem('notes');\n    const count = localStorage.getItem('count');\n    if (notes) {\n      const doNotes = JSON.parse(notes);\n      const doCount = JSON.parse(count);\n      this.setState({ notes: [...doNotes], count: doCount });\n    }\n\n  }\n\n  appendNote = async (note) => {\n    await this.setState({ notes: [{ text: note.text, title: note.title, dateTo: note.dateTo, dateFrom: note.dateFrom, complete: false, id: note.id, color: note.color }, ...this.state.notes], count: this.state.count + 1 });\n    localStorage.setItem('notes', JSON.stringify(this.state.notes));\n    localStorage.setItem('count', parseInt(JSON.stringify(this.state.count)));\n  }\n\n  updateNote = async (note) => {\n    const newNotes = this.state.notes.map(_note => {\n      if (note === _note) {\n        return {\n          text: note.text,\n          title: note.title,\n          dateTo: note.dateTo,\n          dateFrom: note.dateFrom,\n          complete: !note.complete,\n          id: note.id,\n          color: note.color\n        }\n      } else {\n        return _note\n      }\n    });\n    await this.setState({ notes: newNotes });\n    localStorage.setItem('notes', JSON.stringify(this.state.notes))\n  }\n\n  updateIndexing = async (notes) => {\n    let newNotes = notes.reverse().map((_note, _index) => {\n      _note.id = _index;\n      return _note;\n    });\n    newNotes.reverse();\n    await this.setState({ notes: newNotes, count: this.state.count - 1 });\n    localStorage.setItem('notes', JSON.stringify(this.state.notes));\n    localStorage.setItem('count', JSON.stringify(this.state.count));\n  }\n\n  removeItem = async (note) => {\n    const newNotes = this.state.notes.filter((x) => x.id !== note.id);\n    this.updateIndexing(newNotes);\n  }\n\n  clearList = () => {\n    localStorage.clear();\n    this.setState({ notes: [], count: 0 })\n  }\n\n  render() {\n    return (\n      <div className='container' id='wrapper2'>\n        <div className='row'>\n          <div className='col-3'>\n            <h3>You have <span className='badge badge-info'><big>{this.state.count}</big></span> notes</h3>\n          </div>\n          <div className='col-8'>\n            <CreateNote append={this.appendNote} keyProp={this.state.count}></CreateNote>\n          </div>\n          <div className='col-1'>\n            <span className='float-right'><button type='button' id='clearButton' onClick={this.clearList}>Clear list</button></span>\n          </div>\n        </div>\n        <NotesList notes={this.state.notes} update={this.updateNote} removeItem={this.removeItem}></NotesList>\n      </div>\n    );\n  }\n}\n\nexport default Notes;","import React, { Component } from 'react';\nimport Header from './Header';\nimport Notes from './Notes';\n\nimport './stylesheets/Layout.css'\n\nclass Layout extends Component {\n  state = {}\n  render() {\n    return (\n      <div className=\"container-fluid\" id=\"wrapper\">\n        <div className=\"row head\">\n          <Header />\n        </div>\n        <Notes />\n      </div>\n    );\n  }\n}\n\nexport default Layout;","import React from 'react';\nimport './App.css';\nimport Layout from './components/Layout'\n\nfunction App() {\n  return (\n    <div className='App'>\n      <Layout />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}