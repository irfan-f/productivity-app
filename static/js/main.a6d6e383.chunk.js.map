{"version":3,"sources":["components/Header.js","components/CreateNote.js","components/NoteItem.js","components/NotesList.js","components/Notes.js","components/Layout.js","App.js","serviceWorker.js","index.js"],"names":["Header","Fragment","className","id","Component","CreateNote","updateText","e","setState","note","text","target","value","dateTo","state","dateFrom","title","props","keyProp","color","updateTitle","updateDateTo","updateDateFrom","updateColor","submitForm","preventDefault","date","Date","toISOString","split","document","getElementById","append","option","onSubmit","rows","placeholder","onChange","type","data-toggle","data-target","aria-expanded","aria-controls","tabIndex","icon","faPencilAlt","htmlFor","name","defaultValue","NoteItem","complete","toggle","removeItem","parentNode","update","stopPropagation","editNote","a","edit","submitEdit","this","style","backgroundColor","hidden","onClick","faEraser","faEdit","faTimes","source","faCheck","NotesList","doDefault","notes","map","_note","_index","tag","key","updateNote","doFilter","filter","filterBy","toLowerCase","includes","substring","length","Notes","componentDidMount","localStorage","getItem","count","doNotes","JSON","parse","doCount","appendNote","setItem","stringify","parseInt","newNotes","updateIndexing","reverse","x","clearList","clear","setSearch","setSearchBy","faTrash","faSearch","Layout","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.a6d6e383.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './stylesheets/Layout.css'\n\nclass Header extends Component {\n  render() {\n    return (\n      <React.Fragment>\n        <div className=\"page-header\">\n          <h1 id=\"header\">Productivity <small>An organizer for tasks</small></h1>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Header;","import React, { Component } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faPencilAlt } from '@fortawesome/free-solid-svg-icons'\n\nclass CreateNote extends Component {\n  constructor() {\n    super();\n    this.state = {\n      note: {\n        text: '',\n        title: '',\n        dateTo: new Date().toISOString().split('T')[0],\n        dateFrom: '',\n        color: 'grey'\n      }\n    }\n  }\n\n\n  updateText = (e) => {\n    this.setState({ note: { text: e.target.value, dateTo: this.state.note.dateTo, dateFrom: this.state.note.dateFrom, title: this.state.note.title === '' ? 'Note' : this.state.note.title, id: this.props.keyProp, color: this.state.note.color } });\n  }\n\n  updateTitle = (e) => {\n    this.setState({ note: { text: this.state.note.text, dateTo: this.state.note.dateTo, dateFrom: this.state.note.dateFrom, title: e.target.value, id: this.props.keyProp, color: this.state.note.color } });\n  }\n\n  updateDateTo = (e) => {\n    this.setState({ note: { text: this.state.note.text, dateTo: e.target.value, dateFrom: this.state.note.dateFrom, title: this.state.note.title === '' ? 'Note' : this.state.note.title, id: this.props.keyProp, color: this.state.note.color } });\n  }\n\n  updateDateFrom = (e) => {\n    this.setState({ note: { text: this.state.note.text, dateTo: this.state.note.dateTo, dateFrom: e.target.value, title: this.state.note.title === '' ? 'Note' : this.state.note.title, id: this.props.keyProp, color: this.state.note.color } });\n  }\n\n  updateColor = (e) => {\n    this.setState({ note: { text: this.state.note.text, dateTo: this.state.note.dateTo, dateFrom: this.state.note.dateFrom, title: this.state.note.title === '' ? 'Note' : this.state.note.title, id: this.props.keyProp, color: e.target.value } });\n  }\n\n  submitForm = (e) => {\n    e.preventDefault();\n    let date = new Date().toISOString().split('T')[0];\n    if (document.getElementById('create').value !== '') {\n      this.setState({ note: { text: this.state.note.text, dateTo: this.state.note.dateTo, dateFrom: this.state.note.dateFrom, title: this.state.note.title, id: this.props.keyProp, color: this.state.note.color } });\n      this.props.append(this.state.note);\n      document.getElementById('create').value = '';\n      document.getElementById('title').value = '';\n      document.getElementById('dateTo').value = '';\n      document.getElementById('dateFrom').value = date;\n      document.getElementById('colors').option = this.state.color;\n      this.setState({\n        note: {\n          text: '',\n          title: '',\n          dateTo: '',\n          dateFrom: date,\n          id: '',\n          color: this.state.note.color\n        }\n      })\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <form onSubmit={(e) => this.submitForm(e)}>\n          <textarea rows='2' id='create' placeholder='Note' onChange={(e) => this.updateText(e)} type='text'></textarea>\n          <button type='button' id='optionsButton' data-toggle='collapse' data-target='#collapseOptions' aria-expanded='false' aria-controls='collapseOptions' tabIndex='-1'>\n            <i className='arrowDown' tabIndex='-1' />\n          </button>\n          <button type='submit' id='createButton' tabIndex='-1'><FontAwesomeIcon icon={faPencilAlt} /></button>\n          <div className='collapse' id='collapseOptions'>\n            <input id='title' placeholder='Title' type='text' onChange={(e) => this.updateTitle(e)}></input>\n            <div className='colors'>\n              <label htmlFor='colors'>Color:</label>\n              <select name='colors' id='colors' onChange={(e) => this.updateColor(e)}>\n                <option value='grey'>Grey</option>\n                <option value='red'>Red</option>\n                <option value='orange'>Orange</option>\n                <option value='yellow'>Yellow</option>\n                <option value='blue'>Blue</option>\n              </select>\n            </div>\n            <label htmlFor='dateFrom' id='dateFromLabel'>\n              From: \n            </label>\n            <label htmlFor='dateTo' id='dateToLabel'>\n              To: \n            </label>\n              <input id='dateFrom' defaultValue={new Date().toISOString().split('T')[0]} type='date' onChange={(e) => this.updateDateFrom(e)}></input>\n            \n              <input id='dateTo' type='date' onChange={(e) => this.updateDateTo(e)}></input>\n            <br />\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\n\nexport default CreateNote;","import React, { Component } from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faEraser, faEdit, faTimes, faPencilAlt, faCheck } from '@fortawesome/free-solid-svg-icons'\n\nimport './stylesheets/Layout.css';\n\nclass NoteItem extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      note: this.props.note,\n      edit: false,\n      complete: this.props.note.complete\n    }\n  }\n\n  updateText = (e) => {\n    this.setState({ note: { text: e.target.value, dateTo: this.state.note.dateTo, dateFrom: this.state.note.dateFrom, title: this.state.note.title === '' ? 'Note' : this.state.note.title, id: this.state.note.id, color: this.state.note.color, complete: this.state.note.complete } });\n  }\n\n  updateTitle = (e) => {\n    this.setState({ note: { text: this.state.note.text, dateTo: this.state.note.dateTo, dateFrom: this.state.note.dateFrom, title: e.target.value, id: this.state.note.id, color: this.state.note.color, complete: this.state.note.complete } });\n  }\n\n  updateDateTo = (e) => {\n    this.setState({ note: { text: this.state.note.text, dateTo: e.target.value, dateFrom: this.state.note.dateFrom, title: this.state.note.title === '' ? 'Note' : this.state.note.title, id: this.state.note.id, color: this.state.note.color, complete: this.state.note.complete } });\n  }\n\n  updateDateFrom = (e) => {\n    this.setState({ note: { text: this.state.note.text, dateTo: this.state.note.dateTo, dateFrom: e.target.value, title: this.state.note.title === '' ? 'Note' : this.state.note.title, id: this.state.note.id, color: this.state.note.color, complete: this.state.note.complete } });\n  }\n\n  updateColor = (e) => {\n    this.setState({ note: { text: this.state.note.text, dateTo: this.state.note.dateTo, dateFrom: this.state.note.dateFrom, title: this.state.note.title === '' ? 'Note' : this.state.note.title, id: this.state.note.id, color: e.target.value, complete: this.state.note.complete } });\n  }\n\n  toggle = (e) => {\n    if (e.target.id === 'removeButton') {\n      this.removeItem(this.props.note);\n    } else if (e.target.id === 'completeIt' || e.target.id === 'completeButton' || e.target.id === 'completeUn' || e.target.parentNode.id === 'completeIt' || e.target.parentNode.id === 'completeUn') {\n      this.setState({ complete: !this.state.complete })\n      this.props.update(this.props.note);\n    } else {\n    }\n\n  }\n  removeItem = (e) => {\n    e.stopPropagation();\n    this.props.removeItem(this.props.note);\n  }\n\n  editNote = async (e) => {\n    this.setState({\n      edit: !this.state.edit,\n    });\n    let select = await document.getElementById('colorsEditSelect')\n    select.value = this.state.note.color;\n  }\n\n  submitEdit = (e) => {\n    e.preventDefault();\n    this.props.edit(this.state.note);\n    this.setState({\n      edit: !this.state.edit,\n    })\n  }\n\n  render() {\n    const { note } = this.props;\n    return (\n      <div className='row'>\n        <div className='col ok'>\n          <div className={'card' + (note.complete ? ' completed' : '')} style={{ backgroundColor: (note.color !== 'grey' ? note.color : 'gainsboro') }}>\n            <div className='card-title'>\n              <span className='remove' hidden={this.state.edit}>\n                <button type='button' id='removeButton' onClick={this.removeItem}><FontAwesomeIcon icon={faEraser} /></button>\n              </span>\n              {(this.state.edit) ? <input id='titleEdit' defaultValue={this.state.note.title} type='text' onChange={(e) => this.updateTitle(e)}></input> : <div id='title'>{note.title}</div>}\n              <span id='dates' hidden={this.state.edit}>\n                {(note.dateFrom !== '') ? note.dateFrom + '\\n' : <br />}{note.dateTo !== '' ? note.dateTo : ''}\n              </span>\n              <button type='button' id='editButton' onClick={this.editNote}><FontAwesomeIcon icon={faEdit} hidden={this.state.edit} /><FontAwesomeIcon icon={faTimes} hidden={!this.state.edit} /></button>\n            </div>\n            <span id='datesEdit' hidden={!this.state.edit}>\n              {<input id='dateFromEdit' defaultValue={this.state.note.dateFrom} type='date' onChange={(e) => this.updateDateFrom(e)} hidden={!this.state.edit}></input>}{<input type='date' id='dateToEdit' defaultValue={this.state.note.dateTo} onChange={(e) => this.updateDateTo(e)} hidden={!this.state.edit}></input>}\n            </span>\n            <div className={'card-body' + (note.complete ? ' completed' : '')}>\n              <textarea id='noteEdit' rows='2' defaultValue={this.state.note.text} onChange={(e) => this.updateText(e)} type='text' hidden={!this.state.edit}></textarea>\n              <div className='colorsEdit' hidden={!this.state.edit}>\n                <label htmlFor='colorsEdit'>Color:</label>\n                <select name='colorsEdit' id='colorsEditSelect' onChange={this.updateColor}>\n                  <option value='grey'>Grey</option>\n                  <option value='red'>Red</option>\n                  <option value='orange'>Orange</option>\n                  <option value='yellow'>Yellow</option>\n                  <option value='blue'>Blue</option>\n                </select>\n                <button type='button' id='editCompleteButton' tabIndex='-1' hidden={!this.state.edit}><FontAwesomeIcon icon={faPencilAlt} onClick={this.submitEdit} /></button>\n              </div>\n              <div id='note' hidden={this.state.edit}>\n                <ReactMarkdown source={note.text} />\n              </div>\n              <button type='button' id='completeButton' onClick={(e) => this.toggle(e)} tabIndex='0' hidden={!this.state.edit ? !this.state.complete ? false : true : true}><FontAwesomeIcon id='completeIt' icon={faCheck} /></button>\n              <button type='button' id='completeButton' onClick={(e) => this.toggle(e)} tabIndex='0' hidden={!this.state.edit ? !this.state.complete ? true : false : true}><FontAwesomeIcon id='completeUn' icon={faTimes} /> </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default NoteItem;","import React, { Component } from 'react';\nimport NoteItem from './NoteItem';\n\nimport './stylesheets/Layout.css'\n\nclass NotesList extends Component {\n  componentDidUpdate() {\n    this.notes = this.doFilter();\n  }\n\n  render() {\n    return (\n      <div className='container' id='list'>\n        {this.props.filter === '' ? this.doDefault() : this.doFilter()}\n      </div>\n    );\n  }\n\n  doDefault = () => {\n    const { notes } = this.props;\n    return notes.map((_note, _index) => {\n      return (\n        <NoteItem tag='note' key={_index} note={_note} update={this.updateNote} edit={this.editNote} removeItem={this.removeItem}>\n        </NoteItem>\n      )\n    })\n  }\n\n  doFilter = () => {\n    const { notes, filter, filterBy } = this.props;\n    switch (filterBy) {\n      case 'title':\n        return notes.map((_note, _index) => {\n          if (_note.title.toLowerCase().includes(filter)) {\n            return (\n              <NoteItem tag='note' key={_index} note={_note} update={this.updateNote} edit={this.editNote} removeItem={this.removeItem}>\n              </NoteItem>\n            )\n          } else { return null };\n        });\n      case 'note':\n        return notes.map((_note, _index) => {\n          if (_note.text.toLowerCase().includes(filter)) {\n            return (\n              <NoteItem tag='note' key={_index} note={_note} update={this.updateNote} edit={this.editNote} removeItem={this.removeItem}>\n              </NoteItem>\n            )\n          } else { return null };\n        });\n      case 'color':\n        return notes.map((_note, _index) => {\n          if (_note.color.toLowerCase().substring(0, filter.length) === filter) {\n            return (\n              <NoteItem tag='note' key={_index} note={_note} update={this.updateNote} edit={this.editNote} removeItem={this.removeItem}>\n              </NoteItem>\n            )\n          } else { return null };\n        });\n      case 'dateTo':\n        return notes.map((_note, _index) => {\n          if (_note.dateTo.toLowerCase().substring(0, filter.length) === filter) {\n            return (\n              <NoteItem tag='note' key={_index} note={_note} update={this.updateNote} edit={this.editNote} removeItem={this.removeItem}>\n              </NoteItem>\n            )\n          } else { return null };\n        });\n      case 'dateFrom':\n        return notes.map((_note, _index) => {\n          if (_note.dateFrom.toLowerCase().substring(0, filter.length) === filter) {\n            return (\n              <NoteItem tag='note' key={_index} note={_note} update={this.updateNote} edit={this.editNote} removeItem={this.removeItem}>\n              </NoteItem>\n            )\n          } else { return null };\n        });\n      default:\n        return notes.map((_note, _index) => {\n          if (_note.title.toLowerCase().includes(filter)) {\n            return (\n              <NoteItem tag='note' key={_index} note={_note} update={this.updateNote} edit={this.editNote} removeItem={this.removeItem}>\n              </NoteItem>\n            )\n          } else { return null };\n        });\n    }\n  }\n\n  removeItem = (note) => {\n    this.props.removeItem(note);\n  }\n\n  updateNote = (note) => {\n    this.props.update(note);\n  }\n\n  editNote = (note) => {\n    this.props.edit(note);\n  }\n}\n\nexport default NotesList;","import React, { Component } from 'react';\nimport CreateNote from './CreateNote';\nimport NotesList from './NotesList';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTrash, faSearch } from '@fortawesome/free-solid-svg-icons'\n\nimport './stylesheets/Layout.css'\n\nclass Notes extends Component {\n  constructor() {\n    super();\n    this.state = {\n      notes: [],\n      count: 0,\n      filter: '',\n      filterBy: 'title'\n    };\n  };\n\n  componentDidMount = () => {\n    const notes = localStorage.getItem('notes');\n    const count = localStorage.getItem('count');\n    if (notes) {\n      const doNotes = JSON.parse(notes);\n      const doCount = JSON.parse(count);\n      this.setState({ notes: [...doNotes], count: doCount, filter: this.state.filter });\n    }\n\n  }\n\n  appendNote = async (note) => {\n    this.setState({ notes: [{ text: note.text, title: note.title, dateTo: note.dateTo, dateFrom: note.dateFrom, complete: false, id: note.id, color: note.color }, ...this.state.notes], count: this.state.count + 1, filter: this.state.filter }, () => {\n      localStorage.setItem('notes', JSON.stringify(this.state.notes));\n      localStorage.setItem('count', parseInt(JSON.stringify(this.state.count)));\n    });\n  }\n\n  updateNote = async (note) => {\n    const newNotes = this.state.notes.map(_note => {\n      if (note === _note) {\n        return {\n          text: note.text,\n          title: note.title,\n          dateTo: note.dateTo,\n          dateFrom: note.dateFrom,\n          complete: !note.complete,\n          id: note.id,\n          color: note.color\n        }\n      } else {\n        return _note\n      }\n    });\n    this.setState({ notes: newNotes, count: this.state.count, filter: this.state.filter }, () => {\n      localStorage.setItem('notes', JSON.stringify(this.state.notes));\n    });\n  }\n\n  editNote = async (note) => {\n    const newNotes = this.state.notes.map(_note => {\n      if (note.id === _note.id) {\n        return {\n          text: note.text,\n          title: note.title,\n          dateTo: note.dateTo,\n          dateFrom: note.dateFrom,\n          complete: note.complete,\n          id: note.id,\n          color: note.color\n        }\n      } else {\n        return _note\n      }\n    });\n    this.setState({ notes: newNotes, count: this.state.count, filter: this.state.filter }, () => {\n      localStorage.setItem('notes', JSON.stringify(this.state.notes));\n    });\n  }\n\n  updateIndexing = async (notes) => {\n    let newNotes = notes.reverse().map((_note, _index) => {\n      _note.id = _index;\n      return _note;\n    });\n    newNotes.reverse();\n    this.setState({ notes: newNotes, count: this.state.count - 1, filter: this.state.filter }, () => {\n      localStorage.setItem('notes', JSON.stringify(this.state.notes));\n      localStorage.setItem('count', JSON.stringify(this.state.count));\n    });\n  }\n\n  removeItem = async (note) => {\n    const newNotes = this.state.notes.filter((x) => x.id !== note.id);\n    this.updateIndexing(newNotes);\n  }\n\n  clearList = () => {\n    localStorage.clear();\n    this.setState({ notes: [], count: 0, filter: '' })\n  }\n\n  setSearch = (e) => {\n    this.setState({ notes: this.state.notes, count: this.state.count, filter: e.target.value.toLowerCase(), filterBy: this.state.filterBy });\n  }\n\n  setSearchBy = (e) => {\n    this.setState({ notes: this.state.notes, count: this.state.count, filter: this.state.filter, filterBy: e.target.value });\n  }\n\n  render() {\n    return (\n      <div className='container' id='wrapper2'>\n        <div className='row'>\n          <div className='col-3'>\n            <h3>You have <span className='badge badge-info'><big>{this.state.count}</big></span> notes</h3>\n          </div>\n          <div className='col-7'>\n            <CreateNote append={this.appendNote} keyProp={this.state.count}></CreateNote>\n          </div>\n          <div className='col-2'>\n\n          </div>\n        </div>\n        <div className='row' id='funcs'>\n          <div className='col-4' id='funcsLeft'>\n            <span className='float-left'><button type='button' id='clearButton' onClick={this.clearList}><FontAwesomeIcon icon={faTrash} /></button></span>\n          </div>\n          <div className='col-8' id='funcsRight'>\n            <div className='filterOn'>\n              <FontAwesomeIcon icon={faSearch} id='searchIcon' />\n              <input onChange={this.setSearch} id='search' type='text'></input>\n              <label htmlFor='filterBy'>in  </label>\n              <select name='filterBy' id='searchs' onChange={this.setSearchBy}>\n                <option value='title'>Title</option>\n                <option value='note'>Note</option>\n                <option value='dateFrom'>From</option>\n                <option value='dateTo'>To</option>\n                <option value='color'>Color</option>\n              </select>\n            </div>\n          </div>\n        </div>\n        <NotesList notes={this.state.notes} update={this.updateNote} edit={this.editNote} removeItem={this.removeItem} filter={this.state.filter} filterBy={this.state.filterBy}></NotesList>\n      </div>\n    );\n  }\n}\n\nexport default Notes;","import React, { Component } from 'react';\nimport Header from './Header';\nimport Notes from './Notes';\n\nimport './stylesheets/Layout.css'\n\nclass Layout extends Component {\n  state = {}\n  render() {\n    return (\n      <div className=\"container-fluid\" id=\"wrapper\">\n        <div className=\"row head\">\n          <Header />\n        </div>\n        <Notes />\n      </div>\n    );\n  }\n}\n\nexport default Layout;","import React from 'react';\nimport './App.css';\nimport Layout from './components/Layout'\n\nfunction App() {\n  return (\n    <div className='App'>\n      <Layout />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}