{"version":3,"sources":["components/Header.js","components/CreateNote.js","components/NoteItem.js","components/NotesList.js","components/Notes.js","components/Layout.js","App.js","serviceWorker.js","index.js"],"names":["Header","Fragment","className","id","Component","CreateNote","updateText","e","setState","note","text","target","value","dateTo","state","dateFrom","title","updateTitle","updateDateTo","updateDateFrom","submitForm","preventDefault","document","getElementById","props","append","onSubmit","placeholder","onChange","type","data-toggle","data-target","aria-expanded","aria-controls","tabIndex","htmlFor","name","data-date","NoteItem","toggle","update","removeItem","this","complete","onClick","source","NotesList","updateNote","notes","map","_note","_index","key","Notes","componentDidMount","localStorage","getItem","count","doNotes","JSON","parse","doCount","appendNote","a","setItem","stringify","parseInt","newNotes","filter","x","clearList","clear","Layout","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.3ebc1aa5.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './stylesheets/Layout.css'\n\nclass Header extends Component {\n  render() {\n    return (\n      <React.Fragment>\n        <div className=\"page-header\">\n          <h1 id=\"header\">Productivity <small>A solution to organization</small></h1>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Header;","import React, { Component } from 'react';\n\nclass CreateNote extends Component {\n  constructor() {\n    super();\n    this.state = {\n      note: {\n        text: '',\n        title: '',\n        dateTo: '',\n        dateFrom:''\n      }\n    }\n  }\n\n\n  updateText = (e) => {\n    this.setState({ note: {text: e.target.value, dateTo: this.state.note.dateTo, dateFrom: this.state.note.dateFrom, title: this.state.note.title}});\n  }\n\n  updateTitle = (e) => {\n    this.setState({ note: {text: this.state.note.text, dateTo: this.state.note.dateTo, dateFrom: this.state.note.dateFrom, title: e.target.value }});\n  }\n\n  updateDateTo = (e) => {\n    this.setState({ note: {text: this.state.note.text, dateTo: e.target.value, dateFrom: this.state.note.dateFrom, title: this.state.note.title }});\n  }\n\n  updateDateFrom = (e) => {\n    this.setState({ note: {text: this.state.note.text, dateTo: this.state.note.dateTo, dateFrom: e.target.value, title: this.state.note.title }});\n  }\n\n  submitForm = (e) => {\n    e.preventDefault();\n    if(document.getElementById('create').value !== '') {\n      this.props.append(this.state.note);\n      document.getElementById('create').value = '';\n      document.getElementById('title').value = '';\n      document.getElementById('dateTo').value = '';\n      document.getElementById('dateFrom').value = '';\n      this.setState({note: {\n        text: '',\n        title: '',\n        dateTo: '',\n        dateFrom:''\n      }})\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <form onSubmit={(e) => this.submitForm(e)}>\n          <input id='create' placeholder=\"Note\" onChange={(e) => this.updateText(e)} type='text'></input>\n          <button type='button' className=\"tooltip\">?</button>\n          <button type='button' id='optionsButton' data-toggle=\"collapse\" data-target=\"#collapseOptions\" aria-expanded=\"false\" aria-controls=\"collapseOptions\" tabIndex='-1'>\n            <i className=\"arrowDown\" tabIndex='-1' />\n          </button>\n          <button type='submit' id=\"createButton\" tabIndex='-1'>Create</button>\n          <div className='collapse' id='collapseOptions'>\n            <input id='title' placeholder=\"Title\" type='text' onChange={(e) => this.updateTitle(e)}></input>\n            <div className='colors'>\n              <label htmlFor=\"cars\">Color:</label>\n              <select name=\"cars\" id=\"cars\">\n                <option value=\"volvo\">Volvo</option>\n                <option value=\"saab\">Saab</option>\n                <option value=\"mercedes\">Mercedes</option>\n                <option value=\"audi\">Audi</option>\n              </select>\n            </div>\n            <input id='dateFrom' data-date=\"Date: from\" type='date' onChange={(e) => this.updateDateFrom(e)}></input>\n            <input id='dateTo' placeholder=\"Date: to\" type='date' onChange={(e) => this.updateDateTo(e)}></input>\n            <br/>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\n\nexport default CreateNote;","import React, { Component } from 'react';\nimport ReactMarkdown from \"react-markdown\";\n\nimport './stylesheets/Layout.css';\n\nclass NoteItem extends Component {\n  toggle = (e) => {\n    if(e.target.id !== 'removeButton') {\n      this.props.update(this.props.note);\n    } else {\n      this.removeItem(this.props.note);\n    }\n    \n  }\n  removeItem = (e) => {\n    this.props.removeItem(this.props.note);\n  }\n  \n  render() { \n    const { note } = this.props;\n    return (\n      <div className=\"row\" >\n        <div className=\"col ok\">\n          <div className={\"card\" + (note.complete ? \" completed\" : \"\")} onClick = {this.toggle} >\n            <h4 className=\"card-title\"><span className=\"remove\"><button type=\"button\" id=\"removeButton\" onClick={this.removeItem}>X</button></span>{note.title !== '' ? note.title : 'Note'}<span id='dates'>{note.dateFrom !== '' ? note.dateFrom + ' :' : ''}{note.dateTo !== '' ? ' '+ note.dateTo : ''}</span></h4>\n            <div className={\"card-body\" + (note.complete ? \" completed\" : \"\")}>\n              \n              <ReactMarkdown source={note.text} />\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n \nexport default NoteItem;","import React, { Component } from 'react';\nimport NoteItem from './NoteItem';\n\nimport './stylesheets/Layout.css'\n\nclass NotesList extends Component {\n  \n  render() {\n    const { notes } = this.props;\n    return ( \n      <div className=\"container\" id=\"list\">\n          {\n            notes.map((_note, _index) => {\n              return(\n                <NoteItem key={_index} note={_note} update={this.updateNote} removeItem={this.removeItem}>\n                </NoteItem>\n              )\n            })\n          }\n        </div>\n     );\n  }\n\n  removeItem = (note) => {\n    this.props.removeItem(note);\n  }\n\n  updateNote = (note) => {\n    this.props.update(note);\n  }\n}\n \nexport default NotesList;","import React, { Component } from 'react';\nimport CreateNote from './CreateNote';\nimport NotesList from './NotesList';\n\nimport './stylesheets/Layout.css'\n\nclass Notes extends Component {\n  constructor() {\n    super();\n    this.state = {\n      notes: [],\n      count: 0,\n    };\n  };\n\n  componentDidMount = () => {\n    const notes = localStorage.getItem('notes');\n    const count = localStorage.getItem('count');\n    if(notes) {\n      const doNotes = JSON.parse(notes);\n      const doCount = JSON.parse(count);\n      this.setState({notes: [...doNotes], count: doCount});\n    }\n    \n  }\n\n  appendNote = async (note) => {\n    await this.setState({ notes: [{text: note.text, title: note.title, dateTo: note.dateTo, dateFrom: note.dateFrom, complete: false}, ...this.state.notes], count: this.state.count + 1 });\n    localStorage.setItem('notes', JSON.stringify(this.state.notes));\n    localStorage.setItem('count', parseInt(JSON.stringify(this.state.count)));\n  }\n\n  updateNote = async (note) => {\n    const newNotes = this.state.notes.map(_note => {\n      if(note === _note) {\n        return {\n          text: note.text,\n          title: note.title,\n          dateTo: note.dateTo,\n          dateFrom: note.dateFrom,\n          complete: !note.complete\n        }\n      } else {\n        return _note\n      }\n    });\n    await this.setState({notes: newNotes});\n    localStorage.setItem('notes', JSON.stringify(this.state.notes))\n  }\n\n  removeItem = async (note) => {\n    const newNotes = this.state.notes.filter((x) => x.text !== note.text);\n    await this.setState({notes: newNotes, count: this.state.count - 1});\n    localStorage.setItem('notes', JSON.stringify(this.state.notes));\n    localStorage.setItem('count', JSON.stringify(this.state.count));\n  }\n\n  clearList = () => {\n    localStorage.clear();\n    this.setState({notes: [], count: 0})\n  }\n\n  render() {\n    return (\n      <div className=\"container\" id=\"wrapper2\">\n        <div className=\"row\">\n          <div className=\"col-3\">\n            <h3>You have <span className=\"badge badge-info\"><big>{this.state.count}</big></span> notes</h3>\n          </div>\n          <div className=\"col-8\">\n            <CreateNote append={this.appendNote}></CreateNote>\n          </div>\n          <div className=\"col-1\">\n            <span className=\"float-right\"><button type=\"button\" id=\"clearButton\" onClick={this.clearList}>Clear list</button></span>\n          </div>\n        </div>\n        <NotesList notes={this.state.notes} update={this.updateNote} removeItem={this.removeItem}></NotesList>\n      </div>\n    );\n  }\n}\n\nexport default Notes;","import React, { Component } from 'react';\nimport Header from './Header';\nimport Notes from './Notes';\n\nimport './stylesheets/Layout.css'\n\nclass Layout extends Component {\n  state = {}\n  render() {\n    return (\n      <div className=\"container-fluid\" id=\"wrapper\">\n        <div className=\"row head\">\n          <Header />\n        </div>\n        <Notes />\n      </div>\n    );\n  }\n}\n\nexport default Layout;","import React from 'react';\nimport './App.css';\nimport Layout from './components/Layout'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Layout />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}